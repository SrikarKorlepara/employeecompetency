package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EmployeeTrainingAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmployeeTrainingAllPropertiesEquals(EmployeeTraining expected, EmployeeTraining actual) {
        assertEmployeeTrainingAutoGeneratedPropertiesEquals(expected, actual);
        assertEmployeeTrainingAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmployeeTrainingAllUpdatablePropertiesEquals(EmployeeTraining expected, EmployeeTraining actual) {
        assertEmployeeTrainingUpdatableFieldsEquals(expected, actual);
        assertEmployeeTrainingUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmployeeTrainingAutoGeneratedPropertiesEquals(EmployeeTraining expected, EmployeeTraining actual) {
        assertThat(expected)
            .as("Verify EmployeeTraining auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmployeeTrainingUpdatableFieldsEquals(EmployeeTraining expected, EmployeeTraining actual) {
        assertThat(expected)
            .as("Verify EmployeeTraining relevant properties")
            .satisfies(e -> assertThat(e.getCompletionStatus()).as("check completionStatus").isEqualTo(actual.getCompletionStatus()))
            .satisfies(e -> assertThat(e.getCompletionDate()).as("check completionDate").isEqualTo(actual.getCompletionDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmployeeTrainingUpdatableRelationshipsEquals(EmployeeTraining expected, EmployeeTraining actual) {
        assertThat(expected)
            .as("Verify EmployeeTraining relationships")
            .satisfies(e -> assertThat(e.getTrainingProgram()).as("check trainingProgram").isEqualTo(actual.getTrainingProgram()))
            .satisfies(e -> assertThat(e.getEmployee()).as("check employee").isEqualTo(actual.getEmployee()));
    }
}
