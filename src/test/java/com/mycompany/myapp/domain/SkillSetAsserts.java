package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SkillSetAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSkillSetAllPropertiesEquals(SkillSet expected, SkillSet actual) {
        assertSkillSetAutoGeneratedPropertiesEquals(expected, actual);
        assertSkillSetAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSkillSetAllUpdatablePropertiesEquals(SkillSet expected, SkillSet actual) {
        assertSkillSetUpdatableFieldsEquals(expected, actual);
        assertSkillSetUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSkillSetAutoGeneratedPropertiesEquals(SkillSet expected, SkillSet actual) {
        assertThat(expected)
            .as("Verify SkillSet auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSkillSetUpdatableFieldsEquals(SkillSet expected, SkillSet actual) {
        assertThat(expected)
            .as("Verify SkillSet relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getProfieciencyLevel()).as("check profieciencyLevel").isEqualTo(actual.getProfieciencyLevel()))
            .satisfies(e -> assertThat(e.getLastAssessedDate()).as("check lastAssessedDate").isEqualTo(actual.getLastAssessedDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSkillSetUpdatableRelationshipsEquals(SkillSet expected, SkillSet actual) {
        assertThat(expected)
            .as("Verify SkillSet relationships")
            .satisfies(e -> assertThat(e.getEmployees()).as("check employees").isEqualTo(actual.getEmployees()));
    }
}
