package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CompetencyAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompetencyAllPropertiesEquals(Competency expected, Competency actual) {
        assertCompetencyAutoGeneratedPropertiesEquals(expected, actual);
        assertCompetencyAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompetencyAllUpdatablePropertiesEquals(Competency expected, Competency actual) {
        assertCompetencyUpdatableFieldsEquals(expected, actual);
        assertCompetencyUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompetencyAutoGeneratedPropertiesEquals(Competency expected, Competency actual) {
        assertThat(expected)
            .as("Verify Competency auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompetencyUpdatableFieldsEquals(Competency expected, Competency actual) {
        assertThat(expected)
            .as("Verify Competency relevant properties")
            .satisfies(e -> assertThat(e.getCompetencyId()).as("check competencyId").isEqualTo(actual.getCompetencyId()))
            .satisfies(e -> assertThat(e.getCompetencyName()).as("check competencyName").isEqualTo(actual.getCompetencyName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompetencyUpdatableRelationshipsEquals(Competency expected, Competency actual) {
        assertThat(expected)
            .as("Verify Competency relationships")
            .satisfies(e -> assertThat(e.getEmployees()).as("check employees").isEqualTo(actual.getEmployees()));
    }
}
